---
- hosts: "{{ hosts }}"
  vars: 
    hosts: nodes
    logDest: /home/dbnet/hadoop_logs/docker_no_swarm
    logSrc: /usr/local/hadoop/logs
    namesFile: /home/dbnet/container_names.txt
    filler: '%2Fsystem.slice%2Fdocker-'
  roles:
    - metrics
  sudo: yes
  gather_facts: yes
  remote_user: dbnet
  tasks:

  - name: Check if logs folder exists
    stat: path={{ logDest }}
    register: logs

  - name: Remove logs folder
    when: logs.stat.exists
    shell: rm -rf {{ logDest }}

  - name: Creating logs folder
    file: path={{ logDest }} state=directory owner=dbnet group=dbnet mode=0774 recurse=yes

  - name: Copy hadoop logs to $HOME
    shell: docker cp {{ ansible_hostname }}:{{ logSrc }} {{ logDest }}

  - name: Save long docker-name of Hadoop Containers to file
    shell: echo $(docker inspect -f {{'{{'}}.Name{{'}}'}} {{ ansible_hostname }}){{ filler }}$(docker inspect -f {{'{{'}}.Id{{'}}'}} {{ ansible_hostname }}) > {{ namesFile }}

  - name: Fetch name file
    fetch: src={{ namesFile }} dest=/tmp/{{ ansible_hostname }}_container_name.txt flat=yes

- hosts: 127.0.0.1
  gather_facts: no
  connection: local
  tasks:

  - name: Create names file
    shell: cat /tmp/*_container_name.txt > /tmp/container_names.txt

- hosts: manager
  vars:
    namesFile: /home/dbnet/container_names.txt
  roles:
    - metrics
  sudo: yes
  gather_facts: no
  remote_user: dbnet
  tasks:

  - name: Copy container names to manager
    copy: src=/tmp/container_names.txt dest={{ namesFile }} owner=dbnet group=dbnet mode=644

  - name: Get Hadoop-Container Docker-Id-Names
    shell: cat {{ namesFile }}
    register: conNames

  - name: Creating output folder 'csv2'
    register: folderCreated
    file: path=/home/dbnet/csv2 state=directory owner=dbnet group=dbnet mode=0774 recurse=yes

  - name: Run curl command for Database for each Name and Metric
    shell: curl -u user:user -o csv2/{{item[1]}}_{{item[0]}}.csv -v "http://localhost:8088/export?settings=%7B%22m%22%3A%22{{item[1]}}%22%2C%22e%22%3A%22{{item[0]}}.scope%22%2C%22si%22%3A%221-WEEK%22%2C%22st%22%3A%22previous_hour%22%2C%22et%22%3A%22now%22%2C%22t%22%3A%22HISTORY%22%2C%22f%22%3A%22CSV%22%2C%22np%22%3A-1%2C%22v%22%3Afalse%2C%22tf%22%3A%22ISO%22%2C%22ro%22%3Afalse%2C%22te%22%3A%5B%5D%7D"
    with_nested:
      - conNames.stdout_lines
      - metrics

# TODO
#  - name: Fetch csv and logs

# On Localhost
# Remove /tmp files
